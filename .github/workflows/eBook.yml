name: Publish AsciiDoc as GitHub Release and Pages

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install System Dependencies
      run: sudo apt-get update && sudo apt-get install -y libxml2-dev libxslt-dev

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'

    - name: Install Asciidoctor and Plugins
      run: |
        gem install asciidoctor
        gem install asciidoctor-epub3 --pre
        gem install rouge

    - name: Verify Installed Gems
      run: gem list

    - name: Convert AsciiDoc to HTML
      run: |
        mkdir -p output
        asciidoctor -b html5 -D output book.asciidoc

    - name: Convert AsciiDoc to EPUB
      run: |
        mkdir -p output
        asciidoctor -b epub3 -D output book.asciidoc --trace

    - name: Rename HTML for GitHub Pages
      run: mv output/book.html output/index.html

    - name: Copy Images
      run: cp -r images output/

    - name: Create CNAME File
      run: echo 'mastering-bitcoin.doge.tg' > output/CNAME

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./output

  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install System Dependencies
      run: sudo apt-get update && sudo apt-get install -y libxml2-dev libxslt-dev

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'

    - name: Install Asciidoctor and Plugins
      run: |
        gem install asciidoctor
        gem install asciidoctor-epub3 --pre
        gem install rouge

    - name: Convert AsciiDoc to EPUB
      run: |
        mkdir -p output
        asciidoctor -b epub3 -D output book.asciidoc --trace

    - name: Set Release Tag
      id: release_tag
      run: |
        TAG="v$(date +'%Y.%m.%d')"
        echo "tag=$TAG" >> $GITHUB_ENV
        echo "release_name=Book Release $TAG" >> $GITHUB_ENV

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.tag }}
        release_name: ${{ env.release_name }}
        files: output/book.epub
